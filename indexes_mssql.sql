-- CISPRO INDEX SET
--last changed for schema 245 5/29/2008
-- MSSQL ONLY!!!

USE CAFUSER

--resunc sequences
execute seq_fix;
GO

--mssql indexes
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_APPROVEDVENDORS') DROP INDEX APPROVED_VENDORS.IDX_APPROVEDVENDORS;  create index IDX_APPROVEDVENDORS on APPROVED_VENDORS (STANDARDID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX1_AUDITCOLUMNS') DROP INDEX AUDIT_COLUMNS.IDX1_AUDITCOLUMNS;  create index IDX1_AUDITCOLUMNS on AUDIT_COLUMNS (AUDITTABLEID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX1_AUDITTABLES') DROP INDEX AUDIT_TABLES.IDX1_AUDITTABLES;  create index IDX1_AUDITTABLES on AUDIT_TABLES (AUDITTRANSACTIONID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_AUDITTABLES') DROP INDEX AUDIT_TABLES.IDX2_AUDITTABLES;  create index IDX2_AUDITTABLES on AUDIT_TABLES (PKVALUE);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_AUDITTRANSACTIONS') DROP INDEX AUDIT_TRANSACTIONS.IDX2_AUDITTRANSACTIONS;  create index IDX2_AUDITTRANSACTIONS on AUDIT_TRANSACTIONS (USERID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'CISPRO_SRICONSTITUENTS_IDX01') DROP INDEX CISPRO_SRICONSTITUENTS.CISPRO_SRICONSTITUENTS_IDX01;  create index CISPRO_SRICONSTITUENTS_IDX01 on CISPRO_SRICONSTITUENTS (MATERIALID, SRIVENDORID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'CSWSRIVENDOR1') DROP INDEX CISPRO_SRIVENDORS.CSWSRIVENDOR1;  create index CSWSRIVENDOR1 on CISPRO_SRIVENDORS (SRIID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_CLEARANCES') DROP INDEX CLEARANCES.IDX2_CLEARANCES;  create index IDX2_CLEARANCES on CLEARANCES (MATERIALID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_CLEARANCES') DROP INDEX CLEARANCES.IDX_CLEARANCES;  create index IDX_CLEARANCES on CLEARANCES (SITEID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_COMPONENTCASNOS') DROP INDEX COMPONENT_CASNOS.IDX_COMPONENTCASNOS;  create index IDX_COMPONENTCASNOS on COMPONENT_CASNOS (CASNO);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_COMPONENTCASNOS') DROP INDEX COMPONENT_CASNOS.IDX2_COMPONENTCASNOS;  create index IDX2_COMPONENTCASNOS on COMPONENT_CASNOS (MATERIALID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_CONTAINERS') DROP INDEX CONTAINERS.IDX_CONTAINERS;  create index IDX_CONTAINERS on CONTAINERS (LOCATIONID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_CONTAINERS') DROP INDEX CONTAINERS.IDX2_CONTAINERS;  create index IDX2_CONTAINERS on CONTAINERS (PACKDETAILID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX3_CONTAINERS') DROP INDEX CONTAINERS.IDX3_CONTAINERS;  create index IDX3_CONTAINERS on CONTAINERS (BARCODEID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX4_CONTAINERS') DROP INDEX CONTAINERS.IDX4_CONTAINERS;  create index IDX4_CONTAINERS on CONTAINERS (RECEIPTLOTID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX5_CONTAINERS') DROP INDEX CONTAINERS.IDX5_CONTAINERS;  create index IDX5_CONTAINERS on CONTAINERS (RECEIPTLOTID, LOCATIONID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX6_CONTAINERS') DROP INDEX CONTAINERS.IDX6_CONTAINERS;  create index IDX6_CONTAINERS on CONTAINERS (CONTAINERCLASS);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX8_CONTAINERS') DROP INDEX CONTAINERS.IDX8_CONTAINERS;  create index IDX8_CONTAINERS on CONTAINERS (OWNERID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX9_CONTAINERS') DROP INDEX CONTAINERS.IDX9_CONTAINERS;  create index IDX9_CONTAINERS on CONTAINERS (RETESTDATE);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX10_CONTAINERS') DROP INDEX CONTAINERS.IDX10_CONTAINERS;  create index IDX10_CONTAINERS on CONTAINERS (NETQUANTITY);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX12_CONTAINERS') DROP INDEX CONTAINERS.IDX12_CONTAINERS;  create index IDX12_CONTAINERS on CONTAINERS (EXPIRATIONDATE);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX13_CONTAINERS') DROP INDEX CONTAINERS.IDX13_CONTAINERS;  create index IDX13_CONTAINERS on CONTAINERS (MATERIALSYNONYMID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX14_CONTAINERS') DROP INDEX CONTAINERS.IDX14_CONTAINERS;  create index IDX14_CONTAINERS on CONTAINERS (LOCATIONIDMOVEREQ);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX15_CONTAINERS') DROP INDEX CONTAINERS.IDX15_CONTAINERS;  create index IDX15_CONTAINERS on CONTAINERS (CONTAINERSTATUS);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX16_CONTAINERS') DROP INDEX CONTAINERS.IDX16_CONTAINERS;  create index IDX16_CONTAINERS on CONTAINERS (DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX17_CONTAINERS') DROP INDEX CONTAINERS.IDX17_CONTAINERS;  create index IDX17_CONTAINERS on CONTAINERS (RECEIPTLOTID, LOCATIONID, DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX18_CONTAINERS') DROP INDEX CONTAINERS.IDX18_CONTAINERS;  create index IDX18_CONTAINERS on CONTAINERS (PARENTID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX19_CONTAINERS') DROP INDEX CONTAINERS.IDX19_CONTAINERS;  create index IDX19_CONTAINERS on CONTAINERS (CONTAINERSTATUS, RECEIPTLOTID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX20_CONTAINERS') DROP INDEX CONTAINERS.IDX20_CONTAINERS;  create index IDX20_CONTAINERS on CONTAINERS (RECEIPTLOTID, LOCATIONID, DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX21_CONTAINERS') DROP INDEX CONTAINERS.IDX21_CONTAINERS;  create index IDX21_CONTAINERS on CONTAINERS (EXPIRATIONDATE, CONTAINERSTATUS);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX22_CONTAINERS') DROP INDEX CONTAINERS.IDX22_CONTAINERS;  create index IDX22_CONTAINERS on CONTAINERS (LOCATIONID, DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'CURRENCYID') DROP INDEX CURRENCY.CURRENCYID;  create index CURRENCYID on CURRENCY (CURRENCYID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_DOCUMENTS') DROP INDEX DOCUMENTS.IDX_DOCUMENTS;  create index IDX_DOCUMENTS on DOCUMENTS (MATERIALID, SITEID, DOCTYPE, DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX1_DOCUMENTS') DROP INDEX DOCUMENTS.IDX1_DOCUMENTS;  create index IDX1_DOCUMENTS on DOCUMENTS (MATERIALID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_DOCUMENTS') DROP INDEX DOCUMENTS.IDX2_DOCUMENTS;  create index IDX2_DOCUMENTS on DOCUMENTS (PACKAGEID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX3_DOCUMENTS') DROP INDEX DOCUMENTS.IDX3_DOCUMENTS;  create index IDX3_DOCUMENTS on DOCUMENTS (DOCTYPE);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX4_DOCUMENTS') DROP INDEX DOCUMENTS.IDX4_DOCUMENTS;  create index IDX4_DOCUMENTS on DOCUMENTS (SITEID, PACKAGEID, DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX5_DOCUMENTS') DROP INDEX DOCUMENTS.IDX5_DOCUMENTS;  create index IDX5_DOCUMENTS on DOCUMENTS (CAPTUREDDATE);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX6_DOCUMENTS') DROP INDEX DOCUMENTS.IDX6_DOCUMENTS;  create index IDX6_DOCUMENTS on DOCUMENTS (DOCTYPE, SITEID, MATERIALID, DELETED, ACQUISITIONDATE, DOCUMENTID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'JCTCONTAINERDOCUMENTID_IDX01') DROP INDEX JCT_CONTAINERS_DOCUMENTS.JCTCONTAINERDOCUMENTID_IDX01;  create index JCTCONTAINERDOCUMENTID_IDX01 on JCT_CONTAINERS_DOCUMENTS (DOCUMENTID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_JCTPICTOGRAMSMATERIALS') DROP INDEX JCT_PICTOGRAMS_MATERIALS.IDX2_JCTPICTOGRAMSMATERIALS;  create index IDX2_JCTPICTOGRAMSMATERIALS on JCT_PICTOGRAMS_MATERIALS (MATERIALID, PICTOGRAMID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_PICTOGRAMSMATERIALS') DROP INDEX JCT_PICTOGRAMS_MATERIALS.IDX_PICTOGRAMSMATERIALS;  create index IDX_PICTOGRAMSMATERIALS on JCT_PICTOGRAMS_MATERIALS (MATERIALID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'JCTRECEIPTLOTSORDERITEMSID') DROP INDEX JCT_RECEIPTLOTS_ORDERITEMS.JCTRECEIPTLOTSORDERITEMSID;  create index JCTRECEIPTLOTSORDERITEMSID on JCT_RECEIPTLOTS_ORDERITEMS (JCTRECEIPTLOTSORDERITEMSID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_JCTREGLISTMAT') DROP INDEX JCT_REGULATORYLISTS_MATERIALS.IDX2_JCTREGLISTMAT;  create index IDX2_JCTREGLISTMAT on JCT_REGULATORYLISTS_MATERIALS (MATERIALID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'NDX1_JCT_REGULATORYLISTS_MATLS') DROP INDEX JCT_REGULATORYLISTS_MATERIALS.NDX1_JCT_REGULATORYLISTS_MATLS;  create index NDX1_JCT_REGULATORYLISTS_MATLS on JCT_REGULATORYLISTS_MATERIALS (MATERIALID, REGULATORYLISTID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX3_JCTREGLISTMAT') DROP INDEX JCT_REGULATORYLISTS_MATERIALS.IDX3_JCTREGLISTMAT;  create index IDX3_JCTREGLISTMAT on JCT_REGULATORYLISTS_MATERIALS (REGULATORYLISTID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_JCTREGLISTSITES') DROP INDEX JCT_REGULATORYLISTS_SITES.IDX_JCTREGLISTSITES;  create index IDX_JCTREGLISTSITES on JCT_REGULATORYLISTS_SITES (SITEID, REGULATORYLISTID, DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX1_JCT_RSPHRASES_MATERIALS') DROP INDEX JCT_RSPHRASES_MATERIALS.IDX1_JCT_RSPHRASES_MATERIALS;  create index IDX1_JCT_RSPHRASES_MATERIALS on JCT_RSPHRASES_MATERIALS (MATERIALID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_JCT_RSPHRASES_MATERIALS') DROP INDEX JCT_RSPHRASES_MATERIALS.IDX2_JCT_RSPHRASES_MATERIALS;  create index IDX2_JCT_RSPHRASES_MATERIALS on JCT_RSPHRASES_MATERIALS (RSPHRASEID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_JCTRESOURCESMATERIALS') DROP INDEX JCT_SAFETYRESOURCES_MATERIALS.IDX_JCTRESOURCESMATERIALS;  create index IDX_JCTRESOURCESMATERIALS on JCT_SAFETYRESOURCES_MATERIALS (SAFETYRESOURCESID, MATERIALID, DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_JCTSAMPLESRESULTS') DROP INDEX JCT_SAMPLES_RESULTS.IDX2_JCTSAMPLESRESULTS;  create index IDX2_JCTSAMPLESRESULTS on JCT_SAMPLES_RESULTS (RESULTID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_JCTSAMPLESRESULTS') DROP INDEX JCT_SAMPLES_RESULTS.IDX_JCTSAMPLESRESULTS;  create index IDX_JCTSAMPLESRESULTS on JCT_SAMPLES_RESULTS (SAMPLEID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_JCTUSERSINVGROUPS') DROP INDEX JCT_USERS_INVENTORYGROUPS.IDX2_JCTUSERSINVGROUPS;  create index IDX2_JCTUSERSINVGROUPS on JCT_USERS_INVENTORYGROUPS (DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_JCTUSERSINVGROUPS') DROP INDEX JCT_USERS_INVENTORYGROUPS.IDX_JCTUSERSINVGROUPS;  create index IDX_JCTUSERSINVGROUPS on JCT_USERS_INVENTORYGROUPS (JCTWORKUNITINVENTORYGROUPID, USERID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_JCT_USERS_TESTGROUPS') DROP INDEX JCT_USERS_TESTGROUPS.IDX2_JCT_USERS_TESTGROUPS;  create index IDX2_JCT_USERS_TESTGROUPS on JCT_USERS_TESTGROUPS (TESTGROUPID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX1_JCT_USERS_TESTGROUPS') DROP INDEX JCT_USERS_TESTGROUPS.IDX1_JCT_USERS_TESTGROUPS;  create index IDX1_JCT_USERS_TESTGROUPS on JCT_USERS_TESTGROUPS (USERID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_JCTWORKUNITINVGROUPS') DROP INDEX JCT_WORKUNITS_INVENTORYGROUPS.IDX_JCTWORKUNITINVGROUPS;  create index IDX_JCTWORKUNITINVGROUPS on JCT_WORKUNITS_INVENTORYGROUPS (DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_JCTWORKUNITSINVGROUPS') DROP INDEX JCT_WORKUNITS_INVENTORYGROUPS.IDX2_JCTWORKUNITSINVGROUPS;  create index IDX2_JCTWORKUNITSINVGROUPS on JCT_WORKUNITS_INVENTORYGROUPS (INVENTORYGROUPID, JCTWORKUNITINVENTORYGROUPID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_JCTWORKUNITSINVGRP') DROP INDEX JCT_WORKUNITS_INVENTORYGROUPS.IDX_JCTWORKUNITSINVGRP;  create index IDX_JCTWORKUNITSINVGRP on JCT_WORKUNITS_INVENTORYGROUPS (WORKUNITID, INVENTORYGROUPID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'LINKID') DROP INDEX LINKS.LINKID;  create index LINKID on LINKS (LINKID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_LOCATIONS1') DROP INDEX LOCATIONS.IDX_LOCATIONS1;  create index IDX_LOCATIONS1 on LOCATIONS (LOCATIONLEVEL1ID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_LOCATIONS2') DROP INDEX LOCATIONS.IDX_LOCATIONS2;  create index IDX_LOCATIONS2 on LOCATIONS (LOCATIONLEVEL2ID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_LOCATIONS3') DROP INDEX LOCATIONS.IDX_LOCATIONS3;  create index IDX_LOCATIONS3 on LOCATIONS (LOCATIONLEVEL3ID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_LOCATIONS4') DROP INDEX LOCATIONS.IDX_LOCATIONS4;  create index IDX_LOCATIONS4 on LOCATIONS (LOCATIONLEVEL4ID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_LOCATIONS5') DROP INDEX LOCATIONS.IDX_LOCATIONS5;  create index IDX_LOCATIONS5 on LOCATIONS (LOCATIONLEVEL5ID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_LOCATIONS') DROP INDEX LOCATIONS.IDX2_LOCATIONS;  create index IDX2_LOCATIONS on LOCATIONS (PATHNAME);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX3_LOCATIONS') DROP INDEX LOCATIONS.IDX3_LOCATIONS;  create index IDX3_LOCATIONS on LOCATIONS (INVENTORYGROUPID, LOCATIONID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX4_LOCATIONS') DROP INDEX LOCATIONS.IDX4_LOCATIONS;  create index IDX4_LOCATIONS on LOCATIONS (INVENTORYGROUPID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX5_LOCATIONS') DROP INDEX LOCATIONS.IDX5_LOCATIONS;  create index IDX5_LOCATIONS on LOCATIONS (ISTRANSFERLOCATION);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX6_LOCATIONS') DROP INDEX LOCATIONS.IDX6_LOCATIONS;  create index IDX6_LOCATIONS on LOCATIONS (INVENTORYGROUPID, ISTRANSFERLOCATION);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX7_LOCATIONS') DROP INDEX LOCATIONS.IDX7_LOCATIONS;  create index IDX7_LOCATIONS on LOCATIONS (LOCATIONID, INVENTORYGROUPID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX8_LOCATIONS') DROP INDEX LOCATIONS.IDX8_LOCATIONS;  create index IDX8_LOCATIONS on LOCATIONS (LOCATIONID, LOCATIONLEVEL1ID, LOCATIONLEVEL2ID, LOCATIONLEVEL3ID, LOCATIONLEVEL4ID, LOCATIONLEVEL5ID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_LOCATIONLEVEL1') DROP INDEX LOCATIONS_LEVEL1.IDX_LOCATIONLEVEL1;  create index IDX_LOCATIONLEVEL1 on LOCATIONS_LEVEL1 (SITEID, LOCATIONLEVEL1ID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'BMP_MATERIALSSUBCLASSID') DROP INDEX MATERIALS.BMP_MATERIALSSUBCLASSID;  create index BMP_MATERIALSSUBCLASSID on MATERIALS (MATERIALSUBCLASSID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'BMP_MATERIALSLOCAL') DROP INDEX MATERIALS.BMP_MATERIALSLOCAL;  create index BMP_MATERIALSLOCAL on MATERIALS (KEEPATSTATUS);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_MATERIALS') DROP INDEX MATERIALS.IDX_MATERIALS;  create index IDX_MATERIALS on MATERIALS (MATERIALNAME);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_MATERIALS') DROP INDEX MATERIALS.IDX2_MATERIALS;  create index IDX2_MATERIALS on MATERIALS (CREATIONDATE);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX6_MATERIALS') DROP INDEX MATERIALS.IDX6_MATERIALS;  create index IDX6_MATERIALS on MATERIALS (CREATIONSITEID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX5_MATERIALS') DROP INDEX MATERIALS.IDX5_MATERIALS;  create index IDX5_MATERIALS on MATERIALS (REVIEWSTATUSNAME, CREATIONSITEID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX8_MATERIALS') DROP INDEX MATERIALS.IDX8_MATERIALS;  create index IDX8_MATERIALS on MATERIALS (CREATIONSITEID, MATERIALID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX11_MATERIALS') DROP INDEX MATERIALS.IDX11_MATERIALS;  create index IDX11_MATERIALS on MATERIALS (CASNO);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX16_MATERIALS') DROP INDEX MATERIALS.IDX16_MATERIALS;  create index IDX16_MATERIALS on MATERIALS (REVIEWSTATUSNAME);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX20_MATERIALS') DROP INDEX MATERIALS.IDX20_MATERIALS;  create index IDX20_MATERIALS on MATERIALS (CREATIONWORKUNITID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_MATERIALSCLASS') DROP INDEX MATERIALS_CLASS.IDX_MATERIALSCLASS;  create index IDX_MATERIALSCLASS on MATERIALS_CLASS (CLASSNAME, MATERIALCLASSID, DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_MATERIALSSUBCLASS') DROP INDEX MATERIALS_SUBCLASS.IDX_MATERIALSSUBCLASS;  create index IDX_MATERIALSSUBCLASS on MATERIALS_SUBCLASS (MATERIALCLASSID, MATERIALSUBCLASSID, DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_MATERIALSSYNONYMS') DROP INDEX MATERIALS_SYNONYMS.IDX2_MATERIALSSYNONYMS;  create index IDX2_MATERIALSSYNONYMS on MATERIALS_SYNONYMS (DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX3_MATERIALSSYNONYM') DROP INDEX MATERIALS_SYNONYMS.IDX3_MATERIALSSYNONYM;  create index IDX3_MATERIALSSYNONYM on MATERIALS_SYNONYMS (MATERIALID, DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX4_MATERIALSSYNONYMS') DROP INDEX MATERIALS_SYNONYMS.IDX4_MATERIALSSYNONYMS;  create index IDX4_MATERIALSSYNONYMS on MATERIALS_SYNONYMS (MATERIALID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX5_MATERIALSSYNONYMS') DROP INDEX MATERIALS_SYNONYMS.IDX5_MATERIALSSYNONYMS;  create index IDX5_MATERIALSSYNONYMS on MATERIALS_SYNONYMS (MATERIALID, DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX13_MATERIALSSYNONYMS') DROP INDEX MATERIALS_SYNONYMS.IDX13_MATERIALSSYNONYMS;  create index IDX13_MATERIALSSYNONYMS on MATERIALS_SYNONYMS (DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_METHODS') DROP INDEX METHODS.IDX_METHODS;  create index IDX_METHODS on METHODS (METHODNUMBER);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_METHODS') DROP INDEX METHODS.IDX2_METHODS;  create index IDX2_METHODS on METHODS (DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX3_METHODS') DROP INDEX METHODS.IDX3_METHODS;  create index IDX3_METHODS on METHODS (METHODCLASS);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX4_METHODS') DROP INDEX METHODS.IDX4_METHODS;  create index IDX4_METHODS on METHODS (METHODNUMBER, METHODCLASS, DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'ORDERSID') DROP INDEX ORDERS.ORDERSID;  create index ORDERSID on ORDERS (ORDERSID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'ORDERCARTID') DROP INDEX ORDER_CART.ORDERCARTID;  create index ORDERCARTID on ORDER_CART (ORDERCARTID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'ORDERITEMID') DROP INDEX ORDER_ITEMS.ORDERITEMID;  create index ORDERITEMID on ORDER_ITEMS (ORDERITEMID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_PACKAGES') DROP INDEX PACKAGES.IDX_PACKAGES;  create index IDX_PACKAGES on PACKAGES (MANUFACTURERID,SUPPLIERID,DELETED,MATERIALID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_PACKAGES') DROP INDEX PACKAGES.IDX2_PACKAGES;  create index IDX2_PACKAGES on PACKAGES (MATERIALID,PACKAGEID,DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX4_PACKAGES') DROP INDEX PACKAGES.IDX4_PACKAGES;  create index IDX4_PACKAGES on PACKAGES (MATERIALID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_PACKDETAIL') DROP INDEX PACKDETAIL.IDX_PACKDETAIL;  create index IDX_PACKDETAIL on PACKDETAIL (PACKDETAILID,PACKAGEID, DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_PACKDETAIL') DROP INDEX PACKDETAIL.IDX2_PACKDETAIL;  create index IDX2_PACKDETAIL on PACKDETAIL (PACKAGEDESCRIPTION, PACKAGEID,UNITOFMEASUREID,DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX4_PACKDETAIL') DROP INDEX PACKDETAIL.IDX4_PACKDETAIL;  create index IDX4_PACKDETAIL on PACKDETAIL (PACKAGEID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX12_PACKDETAIL') DROP INDEX PACKDETAIL.IDX12_PACKDETAIL;  create index IDX12_PACKDETAIL on PACKDETAIL (UNITOFMEASUREID,PACKDETAILID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX17_PACKDETAIL') DROP INDEX PACKDETAIL.IDX17_PACKDETAIL;  create index IDX17_PACKDETAIL on PACKDETAIL (PACKAGEID,PACKDETAILID,UNITOFMEASUREID,PACKAGEDESCRIPTION);
If Exists ( SELECT name FROM sysindexes WHERE name = 'SYS_C002648') DROP INDEX RAPID_LOADER.SYS_C002648;  create index SYS_C002648 on RAPID_LOADER (BARCODEID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_RECEIPTLOTSTESTING') DROP INDEX RECEIPTLOTS_TESTING.IDX2_RECEIPTLOTSTESTING;  create index IDX2_RECEIPTLOTSTESTING on RECEIPTLOTS_TESTING (NEXTRETESTDATE);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX1_RECEIPTLOTSTESTING') DROP INDEX RECEIPTLOTS_TESTING.IDX1_RECEIPTLOTSTESTING;  create index IDX1_RECEIPTLOTSTESTING on RECEIPTLOTS_TESTING (RECEIPTLOTID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_RECEIPTLOTS') DROP INDEX RECEIPT_LOTS.IDX_RECEIPTLOTS;  create index IDX_RECEIPTLOTS on RECEIPT_LOTS (CURRENT_STANDARDID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_RECEIPTLOTS') DROP INDEX RECEIPT_LOTS.IDX2_RECEIPTLOTS;  create index IDX2_RECEIPTLOTS on RECEIPT_LOTS (RECEIPTLOTNO);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX3_RECEIPTLOTS') DROP INDEX RECEIPT_LOTS.IDX3_RECEIPTLOTS;  create index IDX3_RECEIPTLOTS on RECEIPT_LOTS (APPROVALSTATUS);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX5_RECEIPTLOTS') DROP INDEX RECEIPT_LOTS.IDX5_RECEIPTLOTS;  create index IDX5_RECEIPTLOTS on RECEIPT_LOTS (INVENTORYGROUPID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX6_RECEIPTLOTS') DROP INDEX RECEIPT_LOTS.IDX6_RECEIPTLOTS;  create index IDX6_RECEIPTLOTS on RECEIPT_LOTS (RECEIPTLOTID, APPROVALSTATUS);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX7_RECEIPTLOTS') DROP INDEX RECEIPT_LOTS.IDX7_RECEIPTLOTS;  create index IDX7_RECEIPTLOTS on RECEIPT_LOTS (INVENTORYGROUPID,RECEIPTLOTID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX8_RECEIPTLOTS') DROP INDEX RECEIPT_LOTS.IDX8_RECEIPTLOTS;  create index IDX8_RECEIPTLOTS on RECEIPT_LOTS (RECEIPTLOTID,RECEIPTLOTNO,INVENTORYGROUPID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_RECONCILIATIONS_CONTAINERS') DROP INDEX RECONCILIATIONS_CONTAINERS.IDX_RECONCILIATIONS_CONTAINERS;  create index IDX_RECONCILIATIONS_CONTAINERS on RECONCILIATIONS_CONTAINERS (CONTAINERID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_RECONCILIATIONSCONTAINERS') DROP INDEX RECONCILIATIONS_CONTAINERS.IDX2_RECONCILIATIONSCONTAINERS;  create index IDX2_RECONCILIATIONSCONTAINERS on RECONCILIATIONS_CONTAINERS (LOCATIONID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX3_RECONCILIATIONSCONTAINERS') DROP INDEX RECONCILIATIONS_CONTAINERS.IDX3_RECONCILIATIONSCONTAINERS;  create index IDX3_RECONCILIATIONSCONTAINERS on RECONCILIATIONS_CONTAINERS (CONTAINERID, RECONCILIATIONID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_REGULATEDCASNOS') DROP INDEX REGULATED_CASNOS.IDX_REGULATEDCASNOS;  create index IDX_REGULATEDCASNOS on REGULATED_CASNOS (CASNO, REGULATORYLISTID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'NDX1_REGULATORY_LISTS') DROP INDEX REGULATORY_LISTS.NDX1_REGULATORY_LISTS;  create index NDX1_REGULATORY_LISTS on REGULATORY_LISTS (REGLISTCODE);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX1_REGULATORYLISTS') DROP INDEX REGULATORY_LISTS.IDX1_REGULATORYLISTS;  create index IDX1_REGULATORYLISTS on REGULATORY_LISTS (DELETED, MATCHTYPE, REGULATORYLISTID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX6_REQUISITIONS') DROP INDEX REQUISITIONS.IDX6_REQUISITIONS;  create index IDX6_REQUISITIONS on REQUISITIONS (CATEGORYID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_REQUISITIONS') DROP INDEX REQUISITIONS.IDX2_REQUISITIONS;  create index IDX2_REQUISITIONS on REQUISITIONS (REQUESTEDFOR);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX3_REQUISITIONS') DROP INDEX REQUISITIONS.IDX3_REQUISITIONS;  create index IDX3_REQUISITIONS on REQUISITIONS (REQUESTSTATUS);
If Exists ( SELECT name FROM sysindexes WHERE name = 'SYS_C0013086') DROP INDEX REQUISITIONS.SYS_C0013086;  create index SYS_C0013086 on REQUISITIONS (REQUISITIONID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX1_REQUISITIONITEMS') DROP INDEX REQUISITIONS_ITEMS.IDX1_REQUISITIONITEMS;  create index IDX1_REQUISITIONITEMS on REQUISITIONS_ITEMS (REQUISITIONID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'SYS_C0013087') DROP INDEX REQUISITIONS_ITEMS.SYS_C0013087;  create index SYS_C0013087 on REQUISITIONS_ITEMS (REQUISITIONSITEMSID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_REQUISITIONITEMS') DROP INDEX REQUISITIONS_ITEMS.IDX2_REQUISITIONITEMS;  create index IDX2_REQUISITIONITEMS on REQUISITIONS_ITEMS (STANDARDIDALT);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX1_RESULTS') DROP INDEX RESULTS.IDX1_RESULTS;  create index IDX1_RESULTS on RESULTS (RECEIPTLOTID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_RESULTS') DROP INDEX RESULTS.IDX_RESULTS;  create index IDX_RESULTS on RESULTS (SPECID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX1_SAMPLES') DROP INDEX SAMPLES.IDX1_SAMPLES;  create index IDX1_SAMPLES on SAMPLES (RECEIPTLOTID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX3_SAMPLES') DROP INDEX SAMPLES.IDX3_SAMPLES;  create index IDX3_SAMPLES on SAMPLES (SAMPLECLASS);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_SAMPLES') DROP INDEX SAMPLES.IDX2_SAMPLES;  create index IDX2_SAMPLES on SAMPLES (TAKEN_DATE);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_SPECS') DROP INDEX SPECS.IDX2_SPECS;  create index IDX2_SPECS on SPECS (METHODID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX4_SPECS') DROP INDEX SPECS.IDX4_SPECS;  create index IDX4_SPECS on SPECS (SPECID, METHODID, STANDARDID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_SPECS') DROP INDEX SPECS.IDX_SPECS;  create index IDX_SPECS on SPECS (STANDARDID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX11_STANDARDS') DROP INDEX STANDARDS.IDX11_STANDARDS;  create index IDX11_STANDARDS on STANDARDS (ISGMP);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_STANDARDS') DROP INDEX STANDARDS.IDX_STANDARDS;  create index IDX_STANDARDS on STANDARDS (MATERIALID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_STANDARDS') DROP INDEX STANDARDS.IDX2_STANDARDS;  create index IDX2_STANDARDS on STANDARDS (WORKUNITID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX3_STANDARDS') DROP INDEX STANDARDS.IDX3_STANDARDS;  create index IDX3_STANDARDS on STANDARDS (STANDARDIDALT);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX4_STANDARDS') DROP INDEX STANDARDS.IDX4_STANDARDS;  create index IDX4_STANDARDS on STANDARDS (MININVENTORYLEVEL, MININVENTORYUNITOFMEASUREID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX5_STANDARDS') DROP INDEX STANDARDS.IDX5_STANDARDS;  create index IDX5_STANDARDS on STANDARDS (STANDARDID, WORKUNITID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX6_STANDARDS') DROP INDEX STANDARDS.IDX6_STANDARDS;  create index IDX6_STANDARDS on STANDARDS (MININVENTORYUNITOFMEASUREID,MATERIALID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX8_STANDARDS') DROP INDEX STANDARDS.IDX8_STANDARDS;  create index IDX8_STANDARDS on STANDARDS (MININVENTORYUNITOFMEASUREID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'MESSAGEID') DROP INDEX SUPPORT_MESSAGES.MESSAGEID;  create index MESSAGEID on SUPPORT_MESSAGES (MESSAGEID, ACCESSID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_TESTGROUPS') DROP INDEX TEST_GROUPS.IDX2_TESTGROUPS;  create index IDX2_TESTGROUPS on TEST_GROUPS (TESTGROUPID, WORKUNITID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_TGM') DROP INDEX TEST_GROUPS_MEMBERS.IDX_TGM;  create index IDX_TGM on TEST_GROUPS_MEMBERS (METHODID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX2_TGM') DROP INDEX TEST_GROUPS_MEMBERS.IDX2_TGM;  create index IDX2_TGM on TEST_GROUPS_MEMBERS (TESTGROUPID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX3_TESTGROUPSMEMBERS') DROP INDEX TEST_GROUPS_MEMBERS.IDX3_TESTGROUPSMEMBERS;  create index IDX3_TESTGROUPSMEMBERS on TEST_GROUPS_MEMBERS (WORKUNITID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX1_USERS') DROP INDEX USERS.IDX1_USERS;  create index IDX1_USERS on USERS (ROLEID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_USERNAME') DROP INDEX USERS.IDX_USERNAME;  create index IDX_USERNAME on USERS (USERNAME);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX3_USERS') DROP INDEX USERS.IDX3_USERS;  create index IDX3_USERS on USERS (WORKUNITID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'IDX_WORKUNITS') DROP INDEX WORK_UNITS.IDX_WORKUNITS;  create index IDX_WORKUNITS on WORK_UNITS (WORKUNITID, SITEID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'CSW_AV1') DROP INDEX APPROVED_VENDORS.CSW_AV1;  create index CSW_AV1 on APPROVED_VENDORS (MANUFACTURERID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'CSW_AV2') DROP INDEX APPROVED_VENDORS.CSW_AV2;  create index CSW_AV2 on APPROVED_VENDORS (STANDARDID, MANUFACTURERID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'CSW_SRI1') DROP INDEX CISPRO_SRI.CSW_SRI1;  create index CSW_SRI1 on CISPRO_SRI (MATERIALID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'CSWSRIVENDOR2') DROP INDEX CISPRO_SRIVENDORS.CSWSRIVENDOR2;  create index CSWSRIVENDOR2 on CISPRO_SRIVENDORS (VENDORID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'CSW_SRICONSTITUENTS1') DROP INDEX CISPRO_SRICONSTITUENTS.CSW_SRICONSTITUENTS1;  create index CSW_SRICONSTITUENTS1 on CISPRO_SRICONSTITUENTS (SRIVENDORID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'csw_std1') DROP INDEX standards.csw_std1;  create index csw_std1 on standards (workunitid, materialid, isdefault, deleted);
If Exists ( SELECT name FROM sysindexes WHERE name = 'idx_sessions_userid') DROP INDEX sessions.idx_sessions_userid;  create index idx_sessions_userid on sessions (userid);
If Exists ( SELECT name FROM sysindexes WHERE name = 'idx_sessions_start') DROP INDEX sessions.idx_sessions_start;  create index idx_sessions_start on sessions (session_start_date);
If Exists ( SELECT name FROM sysindexes WHERE name = 'idx_sessions_end') DROP INDEX sessions.idx_sessions_end;  create index idx_sessions_end on sessions (session_end_date);
If Exists ( SELECT name FROM sysindexes WHERE name = 'idx_sessiondata_sessionid') DROP INDEX sessiondata.idx_sessiondata_sessionid;  create index idx_sessiondata_sessionid on sessiondata (sessionid);
If Exists ( SELECT name FROM sysindexes WHERE name = 'idx_sessiondata_pagename') DROP INDEX sessiondata.idx_sessiondata_pagename;  create index idx_sessiondata_pagename on sessiondata (pagename);
If Exists ( SELECT name FROM sysindexes WHERE name = 'idx_sessiondata_page_FK') DROP INDEX sessiondata.idx_sessiondata_page_FK;  create index idx_sessiondata_page_FK on sessiondata (session_page_fk);
If Exists ( SELECT name FROM sysindexes WHERE name = 'idx_appfeatures_featname') DROP INDEX application_features.idx_appfeatures_featname;  create index idx_appfeatures_featname on application_features (featurename);
If Exists ( SELECT name FROM sysindexes WHERE name = 'idx_appfeatures_sigpage') DROP INDEX application_features.idx_appfeatures_sigpage;  create index idx_appfeatures_sigpage on application_features (signaturepage);

--new as of 9/17/2009
If Exists ( SELECT name FROM sysindexes WHERE name = 'idx_mds1' ) DROP INDEX containers.idx_mds1; create index idx_mds1 on CONTAINERS(RECEIPTLOTID,EXPIRATIONDATE);
If Exists ( SELECT name FROM sysindexes WHERE name = 'idx_mds2' ) DROP INDEX receiptlots_testing.idx_mds2; create index idx_mds2 on RECEIPTLOTS_TESTING(RECEIPTLOTID,DELETED,NEXTRETESTDATE);
If Exists ( SELECT name FROM sysindexes WHERE name = 'idx_mds3' ) DROP INDEX properties_values.idx_mds3; create index idx_mds3 on PROPERTIES_VALUES(MATERIALID,PROPERTYID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'idx_mds4' ) DROP INDEX properties.idx_mds4; create index idx_mds4 on PROPERTIES(OBJECTTYPE,DELETED);
If Exists ( SELECT name FROM sysindexes WHERE name = 'idx_mds5' ) DROP INDEX standards.idx_mds5; create index idx_mds5 on STANDARDS(MATERIALID,DELETED,ISDEFAULT);
If Exists ( SELECT name FROM sysindexes WHERE name = 'idx_mds6' ) DROP INDEX work_units.idx_mds6; create index idx_mds6 on WORK_UNITS(SITEID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'idx_mds7' ) DROP INDEX materials_subclass.idx_mds7; create index idx_mds7 on MATERIALS_SUBCLASS(MATERIALCLASSID);
If Exists ( SELECT name FROM sysindexes WHERE name = 'idx_mds8' ) DROP INDEX sites.idx_mds8; create index idx_mds8 on SITES(ISSYSTEM);


GO